{"ast":null,"code":"import { HttpClient } from '@angular/common/http';\nimport { of, throwError } from 'rxjs';\nimport { catchError, mapTo } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../autenticacao/token.service\";\nconst API = environment.apiURL;\nconst NOT_MODIFIED = '304';\nexport let AnimaisService = /*#__PURE__*/(() => {\n  class AnimaisService {\n    constructor(http, tokenService) {\n      this.http = http;\n      this.tokenService = tokenService;\n    }\n\n    listaDoUsuario(nomeDoUsuario) {\n      return this.http.get(`${API}/${nomeDoUsuario}/photos`);\n    }\n\n    buscaPorID(id) {\n      return this.http.get(`${API}/photos/${id}`);\n    }\n\n    excluiAnimal(id) {\n      return this.http.delete(`${API}/photos/${id}`);\n    }\n\n    curtir(id) {\n      return this.http.post(`${API}/photos/${id}/like`, {}, {\n        observe: 'response'\n      }).pipe(mapTo(true), catchError(error => {\n        return error.status === NOT_MODIFIED ? of(false) : throwError(error);\n      }));\n    }\n\n    upload(descricao, permiteComentario, arquivo) {\n      const formData = new FormData();\n      formData.append('description', descricao);\n      formData.append('allowComments', permiteComentario ? 'true' : 'false');\n    }\n\n  }\n\n  AnimaisService.ɵfac = function AnimaisService_Factory(t) {\n    return new (t || AnimaisService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.TokenService));\n  };\n\n  AnimaisService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AnimaisService,\n    factory: AnimaisService.ɵfac,\n    providedIn: 'root'\n  });\n  return AnimaisService;\n})();","map":null,"metadata":{},"sourceType":"module"}