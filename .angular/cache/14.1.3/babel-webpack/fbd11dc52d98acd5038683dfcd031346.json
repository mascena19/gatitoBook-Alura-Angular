{"ast":null,"code":"import { RouterStateSnapshot, ActivatedRouteSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { switchMap, take } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../animais.service\";\nimport * as i2 from \"src/app/autenticacao/usuario/usuario.service\";\nexport let ListaAnimaisResolver = /*#__PURE__*/(() => {\n  class ListaAnimaisResolver {\n    constructor(animaisService, usuarioService) {\n      this.animaisService = animaisService;\n      this.usuarioService = usuarioService;\n    }\n\n    resolve(route, state) {\n      return this.usuarioService.retornaUsuario().pipe(switchMap(usuario => {\n        var _a;\n\n        const userName = (_a = usuario.name) !== null && _a !== void 0 ? _a : '';\n        return this.animaisService.listaDoUsuario(userName);\n      }), take(1));\n    }\n\n  }\n\n  ListaAnimaisResolver.ɵfac = function ListaAnimaisResolver_Factory(t) {\n    return new (t || ListaAnimaisResolver)(i0.ɵɵinject(i1.AnimaisService), i0.ɵɵinject(i2.UsuarioService));\n  };\n\n  ListaAnimaisResolver.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ListaAnimaisResolver,\n    factory: ListaAnimaisResolver.ɵfac,\n    providedIn: 'root'\n  });\n  return ListaAnimaisResolver;\n})();","map":null,"metadata":{},"sourceType":"module"}